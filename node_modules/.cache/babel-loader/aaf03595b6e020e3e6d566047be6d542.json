{"ast":null,"code":"import _objectSpread from \"/Users/fabio/dev/react-mockapi-flux/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/Users/fabio/dev/react-mockapi-flux/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/fabio/dev/react-mockapi-flux/src/components/ManageCoursePage.js\";\nimport React, { useState, useEffect } from \"react\";\nimport CourseForm from \"./CourseForm\";\nimport * as courseApi from \"../api/courseApi\";\nimport { toast } from \"react-toastify\";\n\nconst ManageCoursePage = props => {\n  const _useState = useState({}),\n        _useState2 = _slicedToArray(_useState, 2),\n        errors = _useState2[0],\n        setErrors = _useState2[1];\n\n  const _useState3 = useState({\n    id: null,\n    slug: \"\",\n    title: \"\",\n    authorId: null,\n    category: \"\"\n  }),\n        _useState4 = _slicedToArray(_useState3, 2),\n        course = _useState4[0],\n        setCourse = _useState4[1];\n\n  useEffect(() => {\n    const slug = props.match.params.slug; // from the path `/courses/:slug`\n\n    if (slug) {\n      courseApi.getCourseBySlug(slug).then(_course => setCourse(_course));\n    }\n  }, [props.match.params.slug]);\n\n  function handleChange({\n    target\n  }) {\n    setCourse(_objectSpread({}, course, {\n      [target.name]: target.value\n    }));\n  }\n\n  function formIsValid() {\n    const _errors = {};\n    if (!course.title) _errors.title = \"Title is required\";\n    if (!course.authorId) _errors.authorId = \"Author ID is required\";\n    if (!course.category) _errors.category = \"Category is required\";\n    setErrors(_errors); // Form is valid if the errors object has no properties\n\n    return Object.keys(_errors).length === 0;\n  }\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    if (!formIsValid()) return;\n    courseApi.saveCourse(course).then(() => {\n      props.history.push(\"/courses\");\n      toast.success(\"Course saved.\");\n    });\n  }\n\n  return React.createElement(React.Fragment, null, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, \"Manage Course\"), React.createElement(CourseForm, {\n    errors: errors,\n    course: course,\n    onChange: handleChange,\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }));\n};\n\nexport default ManageCoursePage;","map":{"version":3,"sources":["/Users/fabio/dev/react-mockapi-flux/src/components/ManageCoursePage.js"],"names":["React","useState","useEffect","CourseForm","courseApi","toast","ManageCoursePage","props","errors","setErrors","id","slug","title","authorId","category","course","setCourse","match","params","getCourseBySlug","then","_course","handleChange","target","name","value","formIsValid","_errors","Object","keys","length","handleSubmit","event","preventDefault","saveCourse","history","push","success"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAO,KAAKC,SAAZ,MAA2B,kBAA3B;AACA,SAASC,KAAT,QAAsB,gBAAtB;;AAEA,MAAMC,gBAAgB,GAAGC,KAAK,IAAI;AAAA,oBACJN,QAAQ,CAAC,EAAD,CADJ;AAAA;AAAA,QACzBO,MADyB;AAAA,QACjBC,SADiB;;AAAA,qBAEJR,QAAQ,CAAC;AACnCS,IAAAA,EAAE,EAAE,IAD+B;AAEnCC,IAAAA,IAAI,EAAE,EAF6B;AAGnCC,IAAAA,KAAK,EAAE,EAH4B;AAInCC,IAAAA,QAAQ,EAAE,IAJyB;AAKnCC,IAAAA,QAAQ,EAAE;AALyB,GAAD,CAFJ;AAAA;AAAA,QAEzBC,MAFyB;AAAA,QAEjBC,SAFiB;;AAUhCd,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMS,IAAI,GAAGJ,KAAK,CAACU,KAAN,CAAYC,MAAZ,CAAmBP,IAAhC,CADc,CACwB;;AACtC,QAAIA,IAAJ,EAAU;AACRP,MAAAA,SAAS,CAACe,eAAV,CAA0BR,IAA1B,EAAgCS,IAAhC,CAAqCC,OAAO,IAAIL,SAAS,CAACK,OAAD,CAAzD;AACD;AACF,GALQ,EAKN,CAACd,KAAK,CAACU,KAAN,CAAYC,MAAZ,CAAmBP,IAApB,CALM,CAAT;;AAOA,WAASW,YAAT,CAAsB;AAAEC,IAAAA;AAAF,GAAtB,EAAkC;AAChCP,IAAAA,SAAS,mBACJD,MADI;AAEP,OAACQ,MAAM,CAACC,IAAR,GAAeD,MAAM,CAACE;AAFf,OAAT;AAID;;AAED,WAASC,WAAT,GAAuB;AACrB,UAAMC,OAAO,GAAG,EAAhB;AAEA,QAAI,CAACZ,MAAM,CAACH,KAAZ,EAAmBe,OAAO,CAACf,KAAR,GAAgB,mBAAhB;AACnB,QAAI,CAACG,MAAM,CAACF,QAAZ,EAAsBc,OAAO,CAACd,QAAR,GAAmB,uBAAnB;AACtB,QAAI,CAACE,MAAM,CAACD,QAAZ,EAAsBa,OAAO,CAACb,QAAR,GAAmB,sBAAnB;AAEtBL,IAAAA,SAAS,CAACkB,OAAD,CAAT,CAPqB,CAQrB;;AACA,WAAOC,MAAM,CAACC,IAAP,CAAYF,OAAZ,EAAqBG,MAArB,KAAgC,CAAvC;AACD;;AAED,WAASC,YAAT,CAAsBC,KAAtB,EAA6B;AAC3BA,IAAAA,KAAK,CAACC,cAAN;AACA,QAAI,CAACP,WAAW,EAAhB,EAAoB;AACpBtB,IAAAA,SAAS,CAAC8B,UAAV,CAAqBnB,MAArB,EAA6BK,IAA7B,CAAkC,MAAM;AACtCb,MAAAA,KAAK,CAAC4B,OAAN,CAAcC,IAAd,CAAmB,UAAnB;AACA/B,MAAAA,KAAK,CAACgC,OAAN,CAAc,eAAd;AACD,KAHD;AAID;;AAED,SACE,0CACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,EAEE,oBAAC,UAAD;AACE,IAAA,MAAM,EAAE7B,MADV;AAEE,IAAA,MAAM,EAAEO,MAFV;AAGE,IAAA,QAAQ,EAAEO,YAHZ;AAIE,IAAA,QAAQ,EAAES,YAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF;AAWD,CAxDD;;AA0DA,eAAezB,gBAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport CourseForm from \"./CourseForm\";\nimport * as courseApi from \"../api/courseApi\";\nimport { toast } from \"react-toastify\";\n\nconst ManageCoursePage = props => {\n  const [errors, setErrors] = useState({});\n  const [course, setCourse] = useState({\n    id: null,\n    slug: \"\",\n    title: \"\",\n    authorId: null,\n    category: \"\"\n  });\n\n  useEffect(() => {\n    const slug = props.match.params.slug; // from the path `/courses/:slug`\n    if (slug) {\n      courseApi.getCourseBySlug(slug).then(_course => setCourse(_course));\n    }\n  }, [props.match.params.slug]);\n\n  function handleChange({ target }) {\n    setCourse({\n      ...course,\n      [target.name]: target.value\n    });\n  }\n\n  function formIsValid() {\n    const _errors = {};\n\n    if (!course.title) _errors.title = \"Title is required\";\n    if (!course.authorId) _errors.authorId = \"Author ID is required\";\n    if (!course.category) _errors.category = \"Category is required\";\n\n    setErrors(_errors);\n    // Form is valid if the errors object has no properties\n    return Object.keys(_errors).length === 0;\n  }\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    if (!formIsValid()) return;\n    courseApi.saveCourse(course).then(() => {\n      props.history.push(\"/courses\");\n      toast.success(\"Course saved.\");\n    });\n  }\n\n  return (\n    <>\n      <h2>Manage Course</h2>\n      <CourseForm\n        errors={errors}\n        course={course}\n        onChange={handleChange}\n        onSubmit={handleSubmit}\n      />\n    </>\n  );\n};\n\nexport default ManageCoursePage;\n"]},"metadata":{},"sourceType":"module"}